# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-06 04:50
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import drf_chunked_upload.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('djcelery', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AOI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('shortname', models.CharField(max_length=25)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('file', models.FileField(blank=True, max_length=255, null=True, upload_to=b'')),
                ('querydate', models.DateTimeField(default=django.utils.timezone.now)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='download', to='djcelery.TaskMeta')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='download', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('classname', models.CharField(max_length=40)),
                ('object_id', models.UUIDField()),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_related', to='ebagis.AOI')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_file_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FileData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('classname', models.CharField(max_length=40)),
                ('path', models.CharField(max_length=1024, unique=True)),
                ('encoding', models.CharField(blank=True, max_length=20, null=True)),
                ('object_id', models.UUIDField()),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filedata_related', to='ebagis.AOI')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_filedata_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Geodatabase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('classname', models.CharField(max_length=40)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geodatabase_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_geodatabase_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HRUZones',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hruzones_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_hruzones_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HRUZonesData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hruzonesdata_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_hruzonesdata_created_by', to=settings.AUTH_USER_MODEL)),
                ('hruzones', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='ebagis.HRUZones')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Maps',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_maps_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrismDir',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prismdir_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_prismdir_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(max_length=255, upload_to=drf_chunked_upload.models.generate_filename)),
                ('filename', models.CharField(max_length=255)),
                ('offset', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Uploading'), (2, 'Complete'), (3, 'Failed')], default=1)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('is_update', models.BooleanField(default=False)),
                ('parent_object_id', models.UUIDField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('parent_object_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_parent', to='contenttypes.ContentType')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_upload', to='djcelery.TaskMeta')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='upload', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Zones',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('_path', models.CharField(db_column=b'path', max_length=1000)),
                ('archiving_rule', models.CharField(choices=[(b'NONE', b'No Archiving'), (b'INDIVIDUAL', b'Individual Archiving'), (b'GROUP', b'Group Archiving'), (b'READONLY', b'Read Only (No Archiving)')], default=b'NONE', editable=False, max_length=10)),
                ('aoi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones_related', to='ebagis.AOI')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_zones_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hruzones',
            name='zones',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hruzones', to='ebagis.Zones'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='_maps',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_maps', to='ebagis.Maps'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='_prism',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_prism', to='ebagis.PrismDir'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='_zones',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_zones', to='ebagis.Zones'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebagis_aoi_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aoi',
            name='parent_aoi',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_aois', to='ebagis.AOI'),
        ),
        migrations.CreateModel(
            name='Geodatabase_GroupArchive',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase',),
        ),
        migrations.CreateModel(
            name='Geodatabase_IndividualArchive',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase',),
        ),
        migrations.CreateModel(
            name='Geodatabase_ReadOnly',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase',),
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.file',),
        ),
        migrations.CreateModel(
            name='LayerData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.filedata',),
        ),
        migrations.CreateModel(
            name='MapDocument',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.file',),
        ),
        migrations.CreateModel(
            name='MapDocumentData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.filedata',),
        ),
        migrations.CreateModel(
            name='XML',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.file',),
        ),
        migrations.CreateModel(
            name='XMLData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.filedata',),
        ),
        migrations.AddField(
            model_name='hruzonesdata',
            name='xml',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hru_xml', to='ebagis.XML'),
        ),
        migrations.AlterIndexTogether(
            name='geodatabase',
            index_together=set([('id', 'classname')]),
        ),
        migrations.AlterIndexTogether(
            name='filedata',
            index_together=set([('object_id', 'content_type', 'classname')]),
        ),
        migrations.AlterUniqueTogether(
            name='file',
            unique_together=set([('content_type', 'object_id', 'name')]),
        ),
        migrations.AlterIndexTogether(
            name='file',
            index_together=set([('object_id', 'content_type', 'classname')]),
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_individualarchive',),
        ),
        migrations.CreateModel(
            name='AOIdb',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_readonly',),
        ),
        migrations.CreateModel(
            name='HRUZonesGDB',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_readonly',),
        ),
        migrations.CreateModel(
            name='Layers',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_individualarchive',),
        ),
        migrations.CreateModel(
            name='ParamGDB',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_readonly',),
        ),
        migrations.CreateModel(
            name='Prism',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_grouparchive',),
        ),
        migrations.CreateModel(
            name='Raster',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layer',),
        ),
        migrations.CreateModel(
            name='RasterData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layerdata',),
        ),
        migrations.CreateModel(
            name='Surfaces',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.geodatabase_readonly',),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layer',),
        ),
        migrations.CreateModel(
            name='TableData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layerdata',),
        ),
        migrations.CreateModel(
            name='Vector',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layer',),
        ),
        migrations.CreateModel(
            name='VectorData',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('ebagis.layerdata',),
        ),
        migrations.AddField(
            model_name='prismdir',
            name='versions',
            field=models.ManyToManyField(related_name='prismdir', to='ebagis.Prism'),
        ),
        migrations.AddField(
            model_name='hruzonesdata',
            name='hruzonesgdb',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hru_zones_data', to='ebagis.HRUZonesGDB'),
        ),
        migrations.AddField(
            model_name='hruzonesdata',
            name='paramgdb',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hru_zones_data', to='ebagis.ParamGDB'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='analysis',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_analysis', to='ebagis.Analysis'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='aoidb',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_aoidb', to='ebagis.AOIdb'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='layers',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_layers', to='ebagis.Layers'),
        ),
        migrations.AddField(
            model_name='aoi',
            name='surfaces',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aoi_surfaces', to='ebagis.Surfaces'),
        ),
        migrations.AlterUniqueTogether(
            name='aoi',
            unique_together=set([('name',)]),
        ),
    ]
